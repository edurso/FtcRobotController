package org.firstinspires.ftc.teamcode.vision;

import org.firstinspires.ftc.teamcode.subsystems.EOCVVision;
import org.opencv.core.Mat;
import org.openftc.easyopencv.OpenCvPipeline;

/**
 * Example pipeline illustrates how to use EasyOpenCV.
 * Pipeline is a wrapper for {@link org.firstinspires.ftc.teamcode.vision.SampleGeneratedPipeline}, which was generated by GRIP and does the majority of the processing.
 */
public class ExamplePipeline extends OpenCvPipeline {

    /* Pipeline Instance */
    private SampleGeneratedPipeline workerPipeline;

    /* The subsystem that the pipeline runs on */
    private EOCVVision system;

    /* TO display/pause the graphics displayed on the driver station */
    private boolean viewportPaused;

    public ExamplePipeline(EOCVVision system) {
        super();
        this.system = system;
        workerPipeline = new SampleGeneratedPipeline();
    }

    @Override
    public Mat processFrame(Mat input) {

        /* Processes the input frame */
        workerPipeline.process(input);

        /* Should be able to return any processed frame you wish to display */
        return workerPipeline.hsvThresholdOutput();

    }

    @Override
    public void onViewportTapped() {
        /* Toggles pause/play when the screen is tapped */
        viewportPaused = !viewportPaused;
        if(viewportPaused) system.webcam.pauseViewport();
        else system.webcam.resumeViewport();
    }

    /**
     * Returns the number of objects the pipeline sees
     * @return the number of objects the pipeline sees
     */
    public int getNumObjectsSeen() {
        return workerPipeline.filterContoursOutput().size();
    }

}
